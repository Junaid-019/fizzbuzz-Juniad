# -*- coding: utf-8 -*-
"""task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EPmL1JbWO406vwnXsze_Orwi2DXLZ7oN
"""

#Code copied from https://www.freecodecamp.org/news/python-unique-list-how-to-get-all-the-unique-values-in-a-list-or-array/

numbers = [1, 2, 2, 3, 3, 4, 5]


def get_unique_numbers(numbers):

    list_of_unique_numbers = []

    unique_numbers = set(numbers)

    for number in unique_numbers:
        list_of_unique_numbers.append(number)

    return list_of_unique_numbers


print(get_unique_numbers(numbers))
# result: [1, 2, 3, 4, 5]

#Idea copied from https://www.geeksforgeeks.org/write-a-function-that-counts-the-number-of-times-a-given-int-occurs-in-a-linked-list/

#Step 1: Start
#Step 2: Create A Function Of A Linked List, Pass A Number 
#        As Arguments And Provide The Count Of The Number To The Function.
#Step 3: Initialize Count Equal To 0.
#Step 4: Traverse In Linked List Until Equal Number Found.
#Step 5: If Found A Number Equal To Update Count By 1.
#Step 6: After Reaching The End Of The Linked List Return Count.
#Step 7: Call The Function.
#Step 8: Prints The Number Of Int Occurrences.
#Step 9: Stop.

